version: '3.3'
services:
  postgresql-user:
    container_name: postgres-user
    image: postgres:latest
    networks:
      - redinterna
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
      - POSTGRES_DB=${DB_NAME_USER}
      - PGDATA=/var/lib/postgresql/data
    labels:
      - "traefik.enable=true"
      - "traefik.tcp.routers.postgresql.rule=HostSNI(`*`)"
      - "traefik.tcp.routers.postgresql.entrypoints=postgresql"
      - "traefik.tcp.routers.postgresql.service=postgresql"
      - "traefik.tcp.services.postgresql.loadbalancer.server.port=5432"
    volumes:
      - ./_data:/var/lib/postgresql/data
    restart: always

  postgresql-instructor:
    container_name: postgres-instructor
    image: postgres:latest
    networks:
      - redinterna
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
      - POSTGRES_DB=${DB_NAME_INSTRUCTOR}
      - PGDATA=/var/lib/postgresql/data
    labels:
      - "traefik.enable=true"
      - "traefik.tcp.routers.postgresql.rule=HostSNI(`*`)"
      - "traefik.tcp.routers.postgresql.entrypoints=postgresql"
      - "traefik.tcp.routers.postgresql.service=postgresql"
      - "traefik.tcp.services.postgresql.loadbalancer.server.port=5432"
    volumes:
      - ./_data:/var/lib/postgresql/data
    restart: always

  postgresql-gymclass:
    container_name: postgres-gymclass
    image: postgres:latest
    networks:
      - redinterna
    environment:
      - POSTGRES_USER=$DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
      - POSTGRES_DB=${DB_NAME_GYMCLASS}
      - PGDATA=/var/lib/postgresql/data
    labels:
      - "traefik.enable=true"
      - "traefik.tcp.routers.postgresql.rule=HostSNI(`*`)"
      - "traefik.tcp.routers.postgresql.entrypoints=postgresql"
      - "traefik.tcp.routers.postgresql.service=postgresql"
      - "traefik.tcp.services.postgresql.loadbalancer.server.port=5432"
    volumes:
      - ./_data:/var/lib/postgresql/data
    restart: always

networks:
  redinterna:
    external: true